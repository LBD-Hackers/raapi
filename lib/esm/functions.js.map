{"version":3,"file":"functions.js","names":["QueryEngine","require","getSatelliteFromLdpResource","CONSOLID","DCAT","findReferenceRegistry","projectUrl","engine","sat","q","dataset","ReferenceRegistry","distribution","downloadURL","results","queryBindings","sources","bindings","toArray","length","get","value","Error"],"sources":["../../src/functions.ts"],"sourcesContent":["const {QueryEngine} = require('@comunica/query-sparql')\r\nconst {getSatelliteFromLdpResource, CONSOLID} = require('consolid-daapi')\r\nconst {DCAT} = require('@inrupt/vocab-common-rdf')\r\n\r\nexport async function findReferenceRegistry(projectUrl) {\r\n    const engine = new QueryEngine()\r\n    const sat = await getSatelliteFromLdpResource(projectUrl)\r\n\r\n    const q = `\r\n    SELECT ?refReg WHERE {\r\n        <${projectUrl}> <${DCAT.dataset}> ?ds .\r\n        ?ds a <${CONSOLID.ReferenceRegistry}> ;\r\n            <${DCAT.distribution}>/<${DCAT.downloadURL}> ?refReg.\r\n    } LIMIT 1`\r\n\r\n    const results = await engine.queryBindings(q, { sources: [sat] })\r\n    const bindings = await results.toArray()\r\n    if (bindings.length) return bindings[0].get('refReg').value\r\n    else throw new Error('could not find reference registry for this project')\r\n}"],"mappings":";;;;;;;AAAA,MAAM;EAACA;AAAD,IAAgBC,OAAO,CAAC,wBAAD,CAA7B;;AACA,MAAM;EAACC,2BAAD;EAA8BC;AAA9B,IAA0CF,OAAO,CAAC,gBAAD,CAAvD;;AACA,MAAM;EAACG;AAAD,IAASH,OAAO,CAAC,0BAAD,CAAtB;;AAEO,eAAeI,qBAAf,CAAqCC,UAArC,EAAiD;EACpD,MAAMC,MAAM,GAAG,IAAIP,WAAJ,EAAf;EACA,MAAMQ,GAAG,GAAG,MAAMN,2BAA2B,CAACI,UAAD,CAA7C;EAEA,MAAMG,CAAC,GAAI;AACf;AACA,WAAWH,UAAW,MAAKF,IAAI,CAACM,OAAQ;AACxC,iBAAiBP,QAAQ,CAACQ,iBAAkB;AAC5C,eAAeP,IAAI,CAACQ,YAAa,MAAKR,IAAI,CAACS,WAAY;AACvD,cALI;EAOA,MAAMC,OAAO,GAAG,MAAMP,MAAM,CAACQ,aAAP,CAAqBN,CAArB,EAAwB;IAAEO,OAAO,EAAE,CAACR,GAAD;EAAX,CAAxB,CAAtB;EACA,MAAMS,QAAQ,GAAG,MAAMH,OAAO,CAACI,OAAR,EAAvB;EACA,IAAID,QAAQ,CAACE,MAAb,EAAqB,OAAOF,QAAQ,CAAC,CAAD,CAAR,CAAYG,GAAZ,CAAgB,QAAhB,EAA0BC,KAAjC,CAArB,KACK,MAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACR"}